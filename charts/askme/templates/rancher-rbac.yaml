{{- if .Values.rancher.enabled }}
{{- $clientName := .Values.client.name }}
{{- $namespace := .Values.client.namespace }}
---
# Service Account pour le client
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $clientName }}-sa
  namespace: {{ $namespace }}
  labels:
    app.kubernetes.io/name: {{ include "askme.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    askme.client: {{ $clientName }}
  annotations:
    {{- if .Values.rancher.rbac.annotations }}
    {{- toYaml .Values.rancher.rbac.annotations | nindent 4 }}
    {{- end }}

---
# Role sp√©cifique au namespace du client
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ $namespace }}
  name: {{ $clientName }}-role
  labels:
    app.kubernetes.io/name: {{ include "askme.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    askme.client: {{ $clientName }}
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# RoleBinding pour lier le SA au Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $clientName }}-binding
  namespace: {{ $namespace }}
  labels:
    app.kubernetes.io/name: {{ include "askme.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    askme.client: {{ $clientName }}
roleRef:
  kind: Role
  name: {{ $clientName }}-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: {{ $clientName }}-sa
  namespace: {{ $namespace }}

{{- if .Values.rancher.rbac.additionalUsers }}
---
# RoleBinding pour utilisateurs additionnels
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $clientName }}-users-binding
  namespace: {{ $namespace }}
  labels:
    app.kubernetes.io/name: {{ include "askme.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    askme.client: {{ $clientName }}
roleRef:
  kind: Role
  name: {{ $clientName }}-role
  apiGroup: rbac.authorization.k8s.io
subjects:
{{- range .Values.rancher.rbac.additionalUsers }}
- kind: User
  name: {{ .name }}
  apiGroup: rbac.authorization.k8s.io
{{- end }}
{{- end }}

{{- end }}